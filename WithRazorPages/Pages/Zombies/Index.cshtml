@page
@using WithRazorPages.Core.Interfaces;
@using WithRazorPages.Core.Model;
@model IndexModel
@functions
{
    public class IndexModel : PageModel
    {
        private readonly IRepository<Zombie> _zombieRepository;

        public List<ZombieViewModel> Zombies { get; set; } = new List<ZombieViewModel>();

        public class ZombieViewModel
        {
            public int Id { get; set; }
            public string Name { get; set; }

            public override string ToString()
            {
                return $"{Name} ({Id})";
            }
        }

        public IndexModel(IRepository<Zombie> zombieRepository)
        {
            _zombieRepository = zombieRepository;
        }

        public async Task OnGetAsync()
        {
            Zombies = _zombieRepository.List();
                .Select(n => new ZombieViewModel { Id = n.Id, Name = n.Name }).ToList();
        }

        public async Task OnGetAddAsync()
        {
            var entity = new Zombie()
            {
                Name = "Random Zombie"
            };
            _zombieRepository.Add(entity);

            await OnGetAsync();
        }
    }
}
@{
    ViewBag.ItemName = "Zombie";
    ViewBag.ItemNames = ViewBag.ItemName + "s";
}

<h2>@ViewBag.ItemNames</h2>

<ul>
    @foreach (var item in Model.Zombies)
    {
        <li><a asp-page="/@ViewBag.ItemNames/Details" asp-route-id="@item.Id">@item</a></li>
    }
</ul>
<a asp-page="Index" asp-page-handler="Add">Add @ViewBag.ItemName</a><br />

